group EntitiesStorage;

create(kind, id, jsonData, jsonMetadata, createdAt, updatedAt) ::= <<
  INSERT INTO entities(kind, id, json_data, json_metadata, created_at, updated_at)
  VALUES(:kind, :id, :jsonData, :jsonMetadata, :createdAt, :updatedAt)
  ON DUPLICATE KEY UPDATE json_data = :jsonData, json_metadata = :jsonMetadata, updated_at = :updatedAt
>>

read(kind, id) ::= <<
  SELECT kind, id, json_data AS jsonData, json_metadata AS jsonMetadata, created_at AS createdAt, updated_at as updatedAt
  FROM entities
  WHERE kind = :kind AND id = :id
  LIMIT 1
>>

update(kind, id, jsonData, jsonMetadata, updatedAt) ::= <<
  UPDATE entities
  SET json_data = :jsonData, json_metadata = :jsonMetadata, updated_at = :updatedAt
  WHERE kind = :kind AND id = :id
>>

delete(kind, id) ::= <<
  DELETE FROM entities WHERE kind = :kind AND id = :id
>>

scan(kind, limit) ::= <<
  SELECT kind, id, json_data AS jsonData, json_metadata AS jsonMetadata, created_at AS createdAt, updated_at as updatedAt
  FROM entities
  WHERE kind = :kind
  ORDER BY id
  LIMIT :limit
>>

scanAfter(kind, afterId, limit) ::= <<
  SELECT kind, id, json_data AS jsonData, json_metadata AS jsonMetadata, created_at AS createdAt, updated_at as updatedAt
  FROM entities
  WHERE kind = :kind AND id > :afterId
  ORDER BY id
  LIMIT :limit
>>
